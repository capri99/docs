# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015-2020 Mattermost
# This file is distributed under the same license as the Mattermost package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Mattermost 5.21\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-03-14 17:07+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../source/developer/interactive-messages.rst:4
msgid "Interactive Messages: Buttons and Menus"
msgstr ""

#: ../../source/developer/interactive-messages.rst:6
msgid ""
"Mattermost supports interactive message buttons and menus for "
":doc:`incoming <webhooks-incoming>` and :doc:`outgoing webhooks "
"<webhooks-outgoing>`, :doc:`custom slash commands <slash-commands>`, and "
":doc:`plugins <../administration/plugins>` via actions. They help make "
"your integrations richer by completing common tasks inside Mattermost "
"conversations, increasing user engagement and productivity."
msgstr ""

#: ../../source/developer/interactive-messages.rst:10
msgid ""
"For information on interactive dialogs, :doc:`see here <interactive-"
"dialogs>`."
msgstr ""

#: ../../source/developer/interactive-messages.rst:12
msgid ""
"Use interactive messages to simplify complex workflows by allowing users "
"to take quick actions directly through your integration post. For "
"example, they enable your integration to:"
msgstr ""

#: ../../source/developer/interactive-messages.rst:14
msgid "Mark a task complete in your project management tracker"
msgstr ""

#: ../../source/developer/interactive-messages.rst:15
msgid "Conduct a customer survey or a poll"
msgstr ""

#: ../../source/developer/interactive-messages.rst:16
msgid "Initiate a command to merge a branch into a release"
msgstr ""

#: ../../source/developer/interactive-messages.rst:18
msgid ""
"To try it out, you can use this `Matterpoll plugin "
"<https://github.com/matterpoll/matterpoll>`__ to add polling to "
"Mattermost channels via a ``/poll`` slash command."
msgstr ""

#: ../../source/developer/interactive-messages.rst:28
msgid "Message Buttons"
msgstr ""

#: ../../source/developer/interactive-messages.rst:30
msgid ""
"Add message buttons as ``actions`` in your integration `message "
"attachments <https://docs.mattermost.com/developer/message-"
"attachments.html>`__."
msgstr ""

#: ../../source/developer/interactive-messages.rst:32
msgid "The following payload gives an example that uses message buttons."
msgstr ""

#: ../../source/developer/interactive-messages.rst:64
#: ../../source/developer/interactive-messages.rst:123
msgid ""
"The integration can respond with an update to the original post, or with "
"an ephemeral message:"
msgstr ""

#: ../../source/developer/interactive-messages.rst:78
msgid "Message Menus"
msgstr ""

#: ../../source/developer/interactive-messages.rst:80
msgid ""
"Similar to buttons, add message menus as ``actions`` in your integration "
"`message attachments <https://docs.mattermost.com/developer/message-"
"attachments.html>`__."
msgstr ""

#: ../../source/developer/interactive-messages.rst:84
msgid "The following payload gives an example that uses message menus."
msgstr ""

#: ../../source/developer/interactive-messages.rst:135
msgid "Message Menus for Channels"
msgstr ""

#: ../../source/developer/interactive-messages.rst:137
msgid ""
"You can provide a list of channels for message menus for users to select "
"from. Users can only select from public channels in their teams."
msgstr ""

#: ../../source/developer/interactive-messages.rst:139
msgid "Specify ``channels`` as your action's ``data_source`` as follows:"
msgstr ""

#: ../../source/developer/interactive-messages.rst:166
msgid "Message Menus for Users"
msgstr ""

#: ../../source/developer/interactive-messages.rst:168
msgid ""
"Similar to channels, you can also provide a list of users for message "
"menus. The user can choose the user who is part of the Mattermost system."
msgstr ""

#: ../../source/developer/interactive-messages.rst:170
msgid "Specify ``users`` as your action's ``data_source`` as follows:"
msgstr ""

#: ../../source/developer/interactive-messages.rst:197
msgid "Parameters"
msgstr ""

#: ../../source/developer/interactive-messages.rst:199
msgid ""
"Below is a brief description of each parameter to help you customize the "
"interactive message button and menu in Mattermost. For more information "
"on message attachments, `see our documentation "
"<https://docs.mattermost.com/developer/message-attachments.html>`__."
msgstr ""

#: ../../source/developer/interactive-messages.rst:202
msgid "Name"
msgstr ""

#: ../../source/developer/interactive-messages.rst:202
msgid "Give your action a descriptive name."
msgstr ""

#: ../../source/developer/interactive-messages.rst:205
msgid "URL"
msgstr ""

#: ../../source/developer/interactive-messages.rst:205
msgid ""
"The actions are backed by an integration that handles HTTP POST requests "
"when users click the message button. The URL parameter determines where "
"this action is sent. The request contains an ``application/json`` JSON "
"string. As of 5.14, relative URLs are accepted, simplifying the workflow "
"when a plugin handles the action."
msgstr ""

#: ../../source/developer/interactive-messages.rst:294
msgid "Context"
msgstr ""

#: ../../source/developer/interactive-messages.rst:208
msgid ""
"The requests sent to the specified URL contain the user ID, post ID, "
"channel ID, team ID, and any context that was provided in the action "
"definition. The post ID can be used to, for example, delete or edit the "
"post after clicking on a message button."
msgstr ""

#: ../../source/developer/interactive-messages.rst:210
msgid "A simple example of a request is given below:"
msgstr ""

#: ../../source/developer/interactive-messages.rst:224
msgid "In most cases, your integration will do one or both of these things:"
msgstr ""

#: ../../source/developer/interactive-messages.rst:226
msgid ""
"**Identifying which action was triggered**. For example, a GitHub "
"integration might store something like this in the context:"
msgstr ""

#: ../../source/developer/interactive-messages.rst:242
msgid ""
"In the example above, when the message button is clicked, your "
"integration sends a request to the specified URL with the intention to "
"merge the pull request identified by the context."
msgstr ""

#: ../../source/developer/interactive-messages.rst:244
msgid ""
"**Authenticating the server**. An important property of the context "
"parameter is that it's kept confidential. If your integration is not "
"behind a firewall, you could add a token to your context without users "
"ever being able to see it:"
msgstr ""

#: ../../source/developer/interactive-messages.rst:261
msgid ""
"Then, when your integration receives the request, it can verify that the "
"token matches one that you previously generated and know that the request"
" is legitimately coming from the Mattermost server and is not forged."
msgstr ""

#: ../../source/developer/interactive-messages.rst:263
msgid ""
"Depending on the application, integrations can also perform "
"authentication statelessly with cryptographic signatures such as:"
msgstr ""

#: ../../source/developer/interactive-messages.rst:280
msgid ""
"It's also possible for integrations to do both of these things with a "
"single token and use something like this as context:"
msgstr ""

#: ../../source/developer/interactive-messages.rst:294
msgid ""
"Then, when the integration receives the request, it can act based on the "
"action ID."
msgstr ""

#: ../../source/developer/interactive-messages.rst:297
msgid "Tips and Best Practices"
msgstr ""

#: ../../source/developer/interactive-messages.rst:299
msgid ""
"The external application may be written in any programming language. It "
"needs to provide a URL which receives the request sent by your Mattermost"
" server and responds within the required JSON format."
msgstr ""

#: ../../source/developer/interactive-messages.rst:300
msgid ""
"To get started, you can use this `sample plugin "
"<https://github.com/matterpoll/matterpoll>`__ to add polling to "
"Mattermost channels via a `/poll` slash command."
msgstr ""

#: ../../source/developer/interactive-messages.rst:303
msgid "Share Your Integration"
msgstr ""

#: ../../source/developer/interactive-messages.rst:305
msgid ""
"If you've built an integration for Mattermost, please consider `sharing "
"your work <https://www.mattermost.org/share-your-mattermost-projects/>`__"
" in our `app directory <https://about.mattermost.com/default-app-"
"directory/>`__."
msgstr ""

#: ../../source/developer/interactive-messages.rst:307
msgid ""
"The `app directory <https://about.mattermost.com/default-app-"
"directory/>`__ lists open source integrations developed by the Mattermost"
" community and are available for download, customization, and deployment "
"to your private cloud or on-prem infrastructure."
msgstr ""

#: ../../source/developer/interactive-messages.rst:310
msgid "Slack Compatibility"
msgstr ""

#: ../../source/developer/interactive-messages.rst:312
msgid ""
"Like Slack, actions are specified in an **Actions** list within the "
"message attachment. Moreover, your integrations can react with ephemeral "
"messages or message updates similar to Slack."
msgstr ""

#: ../../source/developer/interactive-messages.rst:314
msgid ""
"However, the schema for these objects is slightly different given Slack "
"requires a Slack App and action URL to be pre-configured beforehand. "
"Mattermost instead allows an integration to create an interactive message"
" without pre-configuration."
msgstr ""

#: ../../source/developer/interactive-messages.rst:317
msgid "Frequently Asked Questions"
msgstr ""

#: ../../source/developer/interactive-messages.rst:320
msgid "Are message buttons and menus supported in ephemeral messages?"
msgstr ""

#: ../../source/developer/interactive-messages.rst:322
msgid ""
"Yes, message buttons and menus are supported in ephemeral messages in "
"Mattermost 5.10 and later. This applies to integrations using plugins, "
"the RESTful API and webhooks, across the browser and desktop app."
msgstr ""

#: ../../source/developer/interactive-messages.rst:324
msgid ""
"As an advanced feature, you can also use plugins to update the contents "
"of an ephemeral message with message buttons or menus with the "
"`UpdateEphemeralMessage plugin API "
"<https://developers.mattermost.com/extend/plugins/server/reference/#API.UpdateEphemeralPost>`_."
msgstr ""

#: ../../source/developer/interactive-messages.rst:327
msgid "Why does an interactive button or menu return a 400 error?"
msgstr ""

#: ../../source/developer/interactive-messages.rst:329
msgid "It is likely for one of three reasons:"
msgstr ""

#: ../../source/developer/interactive-messages.rst:331
msgid ""
"Mattermost wasn't able to connect to the integration. If the integration "
"is on your internal infrastructure, it'll need to be whitelisted (see "
"`\"AllowedUntrustedInternalConnections\" config.json setting "
"<https://docs.mattermost.com/administration/config-settings.html#allow-"
"untrusted-internal-connections-to>`__). The log will include the text "
"``err=address forbidden`` in the error message."
msgstr ""

#: ../../source/developer/interactive-messages.rst:333
msgid ""
"The integration didn't return HTTP status 200. The log will include the "
"text ``status=XXX`` in the error message."
msgstr ""

#: ../../source/developer/interactive-messages.rst:335
msgid ""
"The integration didn't return a valid JSON response. The log will include"
" the text ``err=some json error message`` in the error message."
msgstr ""

#: ../../source/developer/interactive-messages.rst:338
msgid "How do I manage properties of an interactive message?"
msgstr ""

#: ../../source/developer/interactive-messages.rst:340
msgid ""
"Use ``update.Props`` in the following ways to manage properties "
"(``Props``) of an interactive message after a user performs an action via"
" an interactive button or menu:"
msgstr ""

#: ../../source/developer/interactive-messages.rst:342
msgid "``update.Props == nil`` - Do not update ``Props`` field."
msgstr ""

#: ../../source/developer/interactive-messages.rst:343
msgid ""
"``update.Props == {}`` - Clear all properties, except the username and "
"icon of the original message, as well as whether the message was pinned "
"to channel or contained emoji reactions."
msgstr ""

#: ../../source/developer/interactive-messages.rst:344
msgid ""
"``update.Props == some_props`` - Post will be updated to ``some_props``. "
"Username and icon of the original message, and whether the message was "
"pinned to channel or contained emoji reactions will not be updated."
msgstr ""

#: ../../source/developer/interactive-messages.rst:346
msgid ""
"Note that in 5.10 and earlier, ``Update.Props == nil`` incorrectly "
"cleared all properties of the interactive message."
msgstr ""

